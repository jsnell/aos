syntax = "proto2";

enum Phase {
    PHASE_TAKE_LOANS = 0;
    PHASE_AUCTION = 1;
    PHASE_TAKE_POWERS = 2;
    PHASE_BUILD = 3;
    PHASE_MOVE = 4;
}

enum Power {
    POWER_FIRST_BUILD = 0;
    POWER_FIRST_MOVE = 1;
    POWER_ENGINEER = 2;
    POWER_LOCOMOTIVE = 3;
    POWER_URBANIZATION = 4;
    POWER_PRODUCTION = 5;
    POWER_TURN_ORDER = 6;
    POWER_NONE = 7;
}

enum Color {
    COLOR_RED = 0;
    COLOR_GREEN = 1;
    COLOR_BLUE = 2;
    COLOR_YELLOW = 3;
    COLOR_PURPLE = 4;
    COLOR_BLACK = 5;
    COLOR_NONE = 6;
}

message TakeLoansAction {
    optional int32 loans_to_take = 1;
}

message BidAction {
    optional int32 amount = 1;
    optional bool pass = 2;
}

message TakePowerAction {
    optional Power power = 1;
}

message BuildInAction {
    optional Location location = 1;
    repeated Track track = 3;
}

message Action {
    optional TakeLoansAction loans = 1;
    optional BidAction bid = 2;
    optional TakePowerAction take_power = 3;
    optional BuildInAction build_in = 4;
    optional bool build_finish = 5;
    optional bool build_undo = 6;
}

message Options {
    repeated Action action = 1;
}

message PhaseState {
    optional int32 auction_pass_order = 1;
    optional int32 last_bid = 2;
    repeated Action queued_build = 6;
}

message Player {
    optional string name = 1;
    optional PhaseState state = 2;
    optional int32 loans = 3 [default=2];
    optional int32 cash = 4;
    optional int32 link_level = 7 [default=1];

    optional Power power = 5 [default=POWER_NONE];
    optional Color color = 6 [default=COLOR_NONE];
}

message RoundState {
    optional int32 current_bid = 1;
}

message Location {
    optional int32 row = 1;
    optional int32 col = 2;
}

message Track {
    optional Location from = 1;
    optional Location to = 2;
}

message Hex {
    optional int32 terrain = 1;
    optional bool city = 3;
    repeated Track track = 2;
}

message MapRow {
    repeated Hex hex = 1;
}

message Map {
    repeated MapRow row = 2;
}

message Terrain {
    optional int32 build_cost = 1;
}

message Link {
    optional Player owner = 1;
}

message Game {
    repeated Player player = 1;
    repeated int32 order = 2;
    optional int32 current_order_index = 3;
    optional Phase phase = 4;
    optional RoundState state = 5;
    repeated Power power = 6;
    optional Map map = 7;
    repeated Link link = 9;
    repeated Terrain terrain = 8;
}

message Test {
    optional Game game = 1;
    optional Phase phase = 5;
    optional Options expected_options = 2;
    optional int32 selected_action = 3;
    optional Game result = 4;
}

